<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[묵은지의 블로그]]></title><description><![CDATA[Blog posted about ...]]></description><link>http://mukeunzi.github.io</link><generator>GatsbyJS</generator><lastBuildDate>Wed, 28 Jul 2021 15:36:27 GMT</lastBuildDate><item><title><![CDATA[SVG란 무엇인가]]></title><description><![CDATA[SVG(Scalable Vector Graphics)란 확장 가능한 벡터 그래픽으로 XML 기반의 표준 그래픽 파일 형식이다. 다른 이미지 파일 형식(JPEG, PNG…]]></description><link>http://mukeunzi.github.io/ImageFormat/what-is-svg/</link><guid isPermaLink="false">http://mukeunzi.github.io/ImageFormat/what-is-svg/</guid><pubDate>Thu, 29 Jul 2021 00:16:13 GMT</pubDate><content:encoded>&lt;h2 id=&quot;svgscalable-vector-graphics란&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#svgscalable-vector-graphics%EB%9E%80&quot; aria-label=&quot;svgscalable vector graphics란 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SVG(Scalable Vector Graphics)란&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;확장 가능한 벡터 그래픽으로 XML 기반의 표준 그래픽 파일 형식이다.&lt;/li&gt;
&lt;li&gt;다른 이미지 파일 형식(JPEG, PNG)과 달리 수학 공식을 기반으로 한 점, 선, 곡선, 도형으로 구성되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;벡터-그래픽은-뭐지-raster-vs-vector-차이&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B2%A1%ED%84%B0-%EA%B7%B8%EB%9E%98%ED%94%BD%EC%9D%80-%EB%AD%90%EC%A7%80-raster-vs-vector-%EC%B0%A8%EC%9D%B4&quot; aria-label=&quot;벡터 그래픽은 뭐지 raster vs vector 차이 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;벡터 그래픽은 뭐지? Raster vs Vector 차이&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;이미지 포맷은 크게 Raster와 Vector로 나눌 수 있는데, 이 차이에 대해 알아보자.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Raster&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Raster에는 JPEG, PNG가 있다.&lt;/li&gt;
&lt;li&gt;비트맵이라고 하는 사각형 격자에 이미지 정보를 저장하고, 이는 픽셀로 결합되어 이미지를 형성한다.&lt;/li&gt;
&lt;li&gt;각 픽셀에 정확한 색상을 지정해야 하는 색상이 많거나 복잡한 사진에 매우 적합하다.&lt;/li&gt;
&lt;li&gt;비트맵이 허용하는 한 디테일한 이미지를 표시할 수 있다.&lt;/li&gt;
&lt;li&gt;하지만 해상도가 고정되어 있어 확대하면 pixelated되어 품질이 저하된다.&lt;/li&gt;
&lt;li&gt;이는 궁극적으로 scaling을 위해 설계되지 않았다. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Vector&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Vector에는 SVG, PDF가 있다.&lt;/li&gt;
&lt;li&gt;이는 이미지를 점들의 집합, 점, 선으로 이미지를 구성한다.&lt;/li&gt;
&lt;li&gt;수학 공식으로 점과 선의 위치, 모양을 지정하고 이미지를 확대/축소 시 이들의 공간(범위)을 유지한다.&lt;/li&gt;
&lt;li&gt;색상과 텍스트를 표시할 수도 있다.&lt;/li&gt;
&lt;li&gt;Vector는 설계 상 Raster에 비해 디테일이 부족해 시각적인 정보만 전달할 수 있다. &lt;/li&gt;
&lt;li&gt;복잡하게 구성된 PNG파일을 SVG로 변환하면 크기가 커지고 비효율적인 파일이 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;장점이-뭐지&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%9E%A5%EC%A0%90%EC%9D%B4-%EB%AD%90%EC%A7%80&quot; aria-label=&quot;장점이 뭐지 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;장점이 뭐지?&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;손쉬운 사용, 쉬운 커스터마이징&lt;/li&gt;
&lt;li&gt;에디터(IDE, 메모장 등) 만으로도 손쉽게 파일 속성 값을 변경할 수 있다.&lt;/li&gt;
&lt;li&gt;직접 XML코드로 값을 제어할 수 있고, 일러스트와 같은 프로그램으로도 색상 값 등을 쉽게 변경할 수 있다.&lt;/li&gt;
&lt;li&gt;스크립트와의 호환성&lt;/li&gt;
&lt;li&gt;웹 그래픽 표준 형식이기 때문에, CSS로 애니메이션을 주는 등 스크립트를 통해 제어가 가능하다.&lt;/li&gt;
&lt;li&gt;웹 접근성 향싱 및 SEO&lt;/li&gt;
&lt;li&gt;XML에 텍스트가 있을 경우, 스크린 리더가 이를 설명할 수 있어 접근성 향상에 이점이 있다.&lt;/li&gt;
&lt;li&gt;XML에 키워드를 포함시키면 인덱싱이 되어 SEO 개선에 도움을 줄 수 있다.&lt;/li&gt;
&lt;li&gt;적은 파일 용량&lt;/li&gt;
&lt;li&gt;이미지가 아주 디테일하지 않은 한, Raster 형식의 이미지보다 더 효율적으로 저장된다.&lt;/li&gt;
&lt;li&gt;SVG는 하나의 파일로 화면에 벡터를 표시할 수 있지만, 비트맵 이미지는 크기에 따라 별도의 파일이 필요함으로 픽셀단위가 더 많은 공간을 차지한다.(브라우저에서는 로딩 속도를 향상 가능)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;svg-파일-작동-방식은&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#svg-%ED%8C%8C%EC%9D%BC-%EC%9E%91%EB%8F%99-%EB%B0%A9%EC%8B%9D%EC%9D%80&quot; aria-label=&quot;svg 파일 작동 방식은 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SVG 파일 작동 방식은?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;SVG는 XML기반의 마크업 언어로 작성된다.&lt;/li&gt;
&lt;li&gt;일러스트와 웹 브라우저는 XML 코드를 통해 SVG파일을 벡터 이미지 표시한다.&lt;/li&gt;
&lt;li&gt;SVG를 확대/축소할 때, 파일을 읽는 프로그램은 명확한 경계와 색상 값을 유지하기 위해 점과 선을 다시 조정한다. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;svg는-언제-사용되지&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#svg%EB%8A%94-%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%EB%90%98%EC%A7%80&quot; aria-label=&quot;svg는 언제 사용되지 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SVG는 언제 사용되지?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;SVG는 scaling에 이점이 있기 때문에 주로 웹 디자인에서 많이 사용된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로고 디자인, (선과 일러스트로 이루어진)다이어그램, 애니메이션, 차트 및 그래프 &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;언제-사용하면-좋을까&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%96%B8%EC%A0%9C-%EC%82%AC%EC%9A%A9%ED%95%98%EB%A9%B4-%EC%A2%8B%EC%9D%84%EA%B9%8C&quot; aria-label=&quot;언제 사용하면 좋을까 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;언제 사용하면 좋을까?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;단순한 이미지나 테두리와 선이 깨끗한 이미지에 (이미지가 복잡할수록 용량이 큰 파일이 생성될 가능성이 높기 떄문)&lt;/li&gt;
&lt;li&gt;이미지 품질의 중요도가 높을 때 (ex. 로고, 아이콘, 일러스트, 데이터 시각화 등)&lt;/li&gt;
&lt;li&gt;웹 사이트에서는 사진이 아닌 이미지에 적합하다.&lt;/li&gt;
&lt;li&gt;웹 사이트 이미지는 브라우저의 크기, 확대/축소, 반응형 디자인 등에 대응하기 쉽다. &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;어떻게-생성할-수-있지&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%96%B4%EB%96%BB%EA%B2%8C-%EC%83%9D%EC%84%B1%ED%95%A0-%EC%88%98-%EC%9E%88%EC%A7%80&quot; aria-label=&quot;어떻게 생성할 수 있지 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;어떻게 생성할 수 있지?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;편집 프로그램, 기존 이미지 파일 변환(JPEG, PNG to SVG), XML 코드로 생성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;참고-문서&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0-%EB%AC%B8%EC%84%9C&quot; aria-label=&quot;참고 문서 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고 문서&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/SVG&quot;&gt;https://developer.mozilla.org/en-US/docs/Web/SVG&lt;/a&gt;
&lt;a href=&quot;https://www.elegantthemes.com/blog/wordpress/what-is-an-svg-file-and-how-do-you-use-it&quot;&gt;https://www.elegantthemes.com/blog/wordpress/what-is-an-svg-file-and-how-do-you-use-it&lt;/a&gt;
&lt;a href=&quot;https://blog.hubspot.com/website/what-is-an-svg-file&quot;&gt;https://blog.hubspot.com/website/what-is-an-svg-file&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title><![CDATA[DynamoDB의 기본키와 보조 인덱스]]></title><description><![CDATA[테이블 구성 요소 DynamoDB와 MySQL의 테이블 구성요소를 비교한 것입니다. DynamoDB MySQL Table Table Row Item Column Attribute 기본키 Primary key 기본키는 각 테이블에서 item…]]></description><link>http://mukeunzi.github.io/Database/dynamodb-primary-key-and-secondary-index/</link><guid isPermaLink="false">http://mukeunzi.github.io/Database/dynamodb-primary-key-and-secondary-index/</guid><pubDate>Sat, 17 Apr 2021 23:55:13 GMT</pubDate><content:encoded>&lt;h2 id=&quot;테이블-구성-요소&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%85%8C%EC%9D%B4%EB%B8%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C&quot; aria-label=&quot;테이블 구성 요소 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;테이블 구성 요소&lt;/h2&gt;
&lt;p&gt;DynamoDB와 MySQL의 테이블 구성요소를 비교한 것입니다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;center&quot;&gt;DynamoDB&lt;/th&gt;
&lt;th align=&quot;center&quot;&gt;MySQL&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Table&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Table&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Row&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Item&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&quot;center&quot;&gt;Column&lt;/td&gt;
&lt;td align=&quot;center&quot;&gt;Attribute&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;기본키-primary-key&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EA%B8%B0%EB%B3%B8%ED%82%A4-primary-key&quot; aria-label=&quot;기본키 primary key permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;기본키 Primary key&lt;/h2&gt;
&lt;p&gt;기본키는 각 테이블에서 item들의 고유 식별자입니다. 기본키는 String, Number, Binary로 구성할 수 있습니다.&lt;/p&gt;
&lt;p&gt;DynamoDB는 2가지 기본키를 지원합니다.&lt;/p&gt;
&lt;h3 id=&quot;1-partition-key---하나의-속성으로-구성된-기본키&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-partition-key---%ED%95%98%EB%82%98%EC%9D%98-%EC%86%8D%EC%84%B1%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EC%84%B1%EB%90%9C-%EA%B8%B0%EB%B3%B8%ED%82%A4&quot; aria-label=&quot;1 partition key   하나의 속성으로 구성된 기본키 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;1. partition key - 하나의 속성으로 구성된 기본키&lt;/h3&gt;
&lt;p&gt;하나의 attribute로 기본키를 지정할 수 있습니다. SQL에서 하나의 컬럼을 기본키로 지정하는 것과 동일합니다.&lt;/p&gt;
&lt;p&gt;기본키를 partition key라고 부르는 이유는 DynamoDB의 데이터 저장 방식과 연관되어 있습니다. DynamoDB에서는 partition key에 따라 데이터가 저장되는 파티션의 위치(물리적인 저장소)가 결정됩니다. &lt;/p&gt;
&lt;p&gt;같은 테이블의 데이터도 partition key가 다르면 다른 파티션에 저장됩니다. 기본키가 partition key 하나일 경우에는 모든 데이터가 다른 파티션에 저장됩니다. &lt;/p&gt;
&lt;p&gt;파티션의 위치는 partition key값으로 내부 해시 함수를 이용해 결정됩니다.&lt;/p&gt;
&lt;h3 id=&quot;2-partition-key-sort-key---두가지-속성으로-구성된-복합키&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-partition-key-sort-key---%EB%91%90%EA%B0%80%EC%A7%80-%EC%86%8D%EC%84%B1%EC%9C%BC%EB%A1%9C-%EA%B5%AC%EC%84%B1%EB%90%9C-%EB%B3%B5%ED%95%A9%ED%82%A4&quot; aria-label=&quot;2 partition key sort key   두가지 속성으로 구성된 복합키 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;2. partition key, sort key - 두가지 속성으로 구성된 복합키&lt;/h3&gt;
&lt;p&gt;두개의 속성으로 기본키를 지정할 수 있습니다. 단어 그대로 partition key는 저장소의 위치를, sort key는 동일한 partition key 값을 정렬하는 데 사용됩니다. &lt;/p&gt;
&lt;p&gt;partition key가 동일한 값은 sort key를 기준으로 정렬되어 파티션에 저장됩니다. 복합키로 구성된 테이블에서는 partition key는 같을 수 있지만 sort key는 같을 수 없습니다.&lt;/p&gt;
&lt;h2 id=&quot;보조-인덱스---secondary-index&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EB%B3%B4%EC%A1%B0-%EC%9D%B8%EB%8D%B1%EC%8A%A4---secondary-index&quot; aria-label=&quot;보조 인덱스   secondary index permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;보조 인덱스 - Secondary Index&lt;/h2&gt;
&lt;p&gt;DynamoDB에서 기본키를 사용하면 데이터를 빠르게 조회할 수 있습니다. &lt;/p&gt;
&lt;p&gt;하지만 기본키가 아닌 속성을 쿼리하면 데이터가 많아질수록 성능이 저하됩니다. 따라서 키가 아닌 속성의 쿼리 성능을 높이기 위해서는 보조 인덱스를 사용해야 합니다.&lt;/p&gt;
&lt;br&gt;
모든 보조 인덱스는 하나의 테이블과 연결되어 있으며 이 테이블을 기본 테이블이라고 합니다. 
&lt;p&gt;인덱스를 생성할 때 인덱스 이름과 기본키(partition key, sort key), 프로젝션 속성을 지정할 수 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프로젝션 속성이란 기본 테이블에서 보조 인덱스로 복사되는 속성을 뜻합니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
보조 인덱스는 DynamoDB에서 자동으로 관리됩니다. 기본 테이블에서 데이터가 추가/삭제 되면 인덱스에도 동일하게 변경사항이 반영됩니다.
&lt;br&gt;
DynamoDB는 2가지의 인덱스를 지원합니다.
&lt;h3 id=&quot;global-secondary-indexgsi&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#global-secondary-indexgsi&quot; aria-label=&quot;global secondary indexgsi permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Global Secondary Index(GSI)&lt;/h3&gt;
&lt;p&gt;GSI는 기본 테이블의 키와 다른 속성으로 기본키를 지정할 수 있습니다. 기본키는 단일 기본키(partiton key)이거나 복합 기본키(partition key, sort key)일 수 있습니다. &lt;/p&gt;
&lt;p&gt;기본 테이블과는 다르게 키 값이 고유하지 않아도 됩니다.&lt;/p&gt;
&lt;p&gt;GSI는 테이블당 최대 20개의 인덱스를 생성할 수 있습니다. 인덱스 크기는 제한이 없으며 테이블이 생성된 이후에도 인덱스를 추가하거나 삭제할 수 있습니다.&lt;/p&gt;
&lt;p&gt;다른 테이블의 속성도 프로젝션 속성에 추가할 수 있습니다. 따라서 모든 파티션의 전체 테이블을 쿼리할 수 있습니다.&lt;/p&gt;
&lt;p&gt;하지만 기본테이블의 속성일지라도 프로젝션으로 지정하지 않은 속성들은 쿼리할 수 없습니다.&lt;/p&gt;
&lt;h3 id=&quot;local-secondary-indexlsi&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#local-secondary-indexlsi&quot; aria-label=&quot;local secondary indexlsi permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Local Secondary index(LSI)&lt;/h3&gt;
&lt;p&gt;LSI는 기본 테이블과 partition key는 동일하지만 sort key가 다른 인덱스입니다. 기본키는 반드시 복합키여야 합니다.&lt;/p&gt;
&lt;p&gt;LSI는 테이블당 최대 5개의 인덱스를 생성할 수 있습니다. &lt;/p&gt;
&lt;p&gt;partition key 값마다 인덱싱된 항목의 크기는 10GB이하여야 하고, 테이블이 생성된 이후에는 인덱를 추가하거나 삭제할 수 없습니다.&lt;/p&gt;
&lt;p&gt;LSI를 사용하면 파티션 값에 지정된 파티션을 단일로 쿼리할 수 있습니다.&lt;/p&gt;
&lt;p&gt;프로젝션하지 않은 속성도 테이블에서 자동으로 가져오기 때문에 프로젝션하지 않은 속성도 쿼리할 수 있습니다.&lt;/p&gt;
&lt;h3 id=&quot;프로젝션-속성-3가지&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%ED%94%84%EB%A1%9C%EC%A0%9D%EC%85%98-%EC%86%8D%EC%84%B1-3%EA%B0%80%EC%A7%80&quot; aria-label=&quot;프로젝션 속성 3가지 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;프로젝션 속성 3가지&lt;/h3&gt;
&lt;p&gt;프로젝션을 지정할 수 있는 속성은 3가지가 있습니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;KEYS_ONLY : 기본 테이블의 기본키(partition key, sort key)와 인덱스의 키 값으로만 구성합니다. 인덱스의 크기를 최소화할 수 있는 방법입니다.&lt;/li&gt;
&lt;li&gt;INCLUDE : KEYS_ONLY에 추가로 다른 속성을 지정하여 인덱스를 구성하는 방법입니다.&lt;/li&gt;
&lt;li&gt;ALL : 기본 테이블의 모든 속성을 추가하는 방법입니다. 모든 테이블의 데이터가 복사되기 때문에 보조 인덱스의 크기가 최대화 됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
일반적으로 GSI에서 지원할 수 없는 경우(strong consistency)를 제외하고는 LSI보다 GSI를 사용해야 합니다. 
&lt;p&gt;보조 인덱스는 스토리지와 프로비저닝된 처리량을 사용하므로 인덱스를 최소한 적은 수로, 작게 유지해야 합니다. 인덱스가 작을수록 쿼리 성능이 좋아지기 때문에 자주 쿼리하지 않는 속성에는 인덱스를 지정하지 않는 것이 좋습니다. &lt;/p&gt;
&lt;h2 id=&quot;참고-문서&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#%EC%B0%B8%EA%B3%A0-%EB%AC%B8%EC%84%9C&quot; aria-label=&quot;참고 문서 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;참고 문서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/HowItWorks.CoreComponents.html&quot;&gt;AWS DynamoDB 공식문서&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded></item><item><title><![CDATA[about]]></title><description><![CDATA[Your name Thank you for reading my resume. If you want to contact me, Please send me an email.]]></description><link>http://mukeunzi.github.io/resume-en/</link><guid isPermaLink="false">http://mukeunzi.github.io/resume-en/</guid><pubDate>Sun, 27 Jan 2019 16:21:13 GMT</pubDate><content:encoded>&lt;h1 id=&quot;your-name&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#your-name&quot; aria-label=&quot;your name permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Your name&lt;/h1&gt;
&lt;div align=&quot;center&quot;&gt;
&lt;p&gt;&lt;em&gt;Thank you for reading my resume. If you want to contact me, Please send me an email.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;</content:encoded></item></channel></rss>